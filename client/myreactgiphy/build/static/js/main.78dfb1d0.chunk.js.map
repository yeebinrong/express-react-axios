{"version":3,"sources":["GiphyList.js","App.js","reportWebVitals.js","index.js"],"names":["GiphyList","imageArray","imageURLs","state","q","a","handleChange","event","setState","target","value","handleSubmit","preventDefault","axios","get","then","res","data","console","log","map","image","src","images","fixed_height","url","alt","onSubmit","this","type","name","onChange","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAGqBA,E,4MACjBC,WAAa,G,EACbC,UAAY,G,EACZC,MAAQ,CACRC,EAAG,GACHC,EAAG,I,EAGHC,aAAe,SAAAC,GACf,EAAKC,SAAS,CAAEJ,EAAGG,EAAME,OAAOC,S,EAGhCC,aAAe,SAAAJ,GACfA,EAAMK,iBAEN,IAAMR,EAAI,CACNA,EAAG,EAAKD,MAAMC,GAGlBS,IAAMC,IAAN,8BAAyC,CAAEV,MACtCW,MAAK,SAAAC,GACF,EAAKf,WAAae,EAAIC,KACtBC,QAAQC,IAAI,EAAKlB,YACjB,EAAKC,UAAY,EAAKD,WAAWmB,KAAI,SAACC,GAClC,OAAO,qBAAKC,IAAKD,EAAME,OAAOC,aAAaC,IAAKC,IAAI,QAExD,EAAKlB,SAAS,CAACH,EAAG,EAAKH,YACvBgB,QAAQC,IAAI,iBAAmB,EAAKjB,e,uDAM5C,OACI,gCACI,uBAAMyB,SAAUC,KAAKjB,aAArB,UACI,kDAEA,uBAAOkB,KAAK,OAAOC,KAAK,IAAIC,SAAUH,KAAKtB,kBAE3C,wBAAQuB,KAAK,SAAb,oBAEJ,8BACKD,KAAK1B,mB,GA3CiB8B,IAAMC,WCO9BC,MANf,WACE,OACM,cAAC,EAAD,KCMOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.78dfb1d0.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class GiphyList extends React.Component {\r\n    imageArray = [];\r\n    imageURLs = [];\r\n    state = {\r\n    q: '',\r\n    a: []\r\n    }\r\n\r\n    handleChange = event => {\r\n    this.setState({ q: event.target.value });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const q = {\r\n        q: this.state.q\r\n    };\r\n\r\n    axios.get(`http://localhost:4000/api/q`, { q })\r\n        .then(res => {\r\n            this.imageArray = res.data;\r\n            console.log(this.imageArray);\r\n            this.imageURLs = this.imageArray.map((image) => {\r\n                return <img src={image.images.fixed_height.url} alt=\"\"/>;\r\n            })\r\n            this.setState({a: this.imageURLs});\r\n            console.log(\"images url is \" + this.imageURLs);\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <div>\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>\r\n                Search Query:\r\n                <input type=\"text\" name=\"q\" onChange={this.handleChange} />\r\n                </label>\r\n                <button type=\"submit\">Add</button>\r\n            </form>\r\n            <div>\r\n                {this.imageURLs}\r\n            </div>\r\n        </div>\r\n    )}\r\n}","import './App.css';\nimport './GiphyList';\nimport GiphyList from './GiphyList';\n\nfunction App() {\n  return (\n        <GiphyList></GiphyList>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}